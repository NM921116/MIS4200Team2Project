@model MIS4200Team2Project.Models.Reccomendation

@{
    ViewBag.Title = "Create";
}

<h2>Give Award Sheeesh</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Reccomendation</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*  <div class="form-group">
                        @Html.LabelFor(model => model.employeeId, "employeeId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("employeeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.employeeId, "", new { @class = "text-danger" })
                </div>
        </div> *@

    @* <div class="form-group">
            @Html.LabelFor(model => model.recognizerId, "recognizerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("recognizerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.recognizerId, "", new { @class = "text-danger" })
            </div>
        </div> *@

    <div class="form-group">
        @Html.LabelFor(model => model.recognitionId, "Employee Recognized", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("recognitionId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.recognitionId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.award, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.award, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.award, "", new { @class = "text-danger" })
        </div>
    </div>

    @* <div class="form-group">
            @Html.LabelFor(model => model.awardDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.awardDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.awardDate, "", new { @class = "text-danger" })
            </div>
        </div> *@

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
